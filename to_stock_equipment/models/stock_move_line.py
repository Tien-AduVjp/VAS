from odoo import fields, models, api, _
from odoo.exceptions import UserError


class StockMoveLine(models.Model):
    _inherit = 'stock.move.line'

    can_create_equipment = fields.Boolean(string='Create Equipment',
                                        help="Checking this to have a new equipment generated automatically"
                                        " once the stock picking will be validated")
    equipment_id = fields.Many2one('maintenance.equipment', string='Equipment', related='lot_id.equipment_id', readonly=True, store=True, compute_sudo=True,
                                   help="The equipment that was generated by this stock move line.")

    def _prepare_equipment_data(self):
        product_id = self.move_id.product_id
        category_id = product_id.product_tmpl_id.get_equipment_category()
        maintenance_team_id = product_id.product_tmpl_id.get_equipment_maintenance_team()
        lot_id = self.lot_id
        return{
            'name': product_id.name,
            'category_id': category_id and category_id.id or False,
            'maintenance_team_id': maintenance_team_id and maintenance_team_id.id or False,
            'lot_id': lot_id and lot_id.id or False,
            'created_from_stock_lot': True,
            'cost': self.move_id.price_unit
            }

    def create_equipment(self):
        can_create = self.env['maintenance.equipment'].check_access_rights('create', False)
        equipment_ids = can_create and self.env['maintenance.equipment'] or self.env['maintenance.equipment'].sudo()
        for line in self:
            if not line.picking_id.picking_type_id.can_create_equipment:
                raise UserError(_("You cannot create equipment from this picking since its operation '%s' does not allow that")
                                 % (line.picking_id.picking_type_id.name))
            equipment_ids |= equipment_ids.create(line._prepare_equipment_data())

        return equipment_ids

    def _action_done(self):
        super(StockMoveLine, self)._action_done()
        for r in self.exists():
            if r.can_create_equipment and r.lot_id:
                r.create_equipment()
